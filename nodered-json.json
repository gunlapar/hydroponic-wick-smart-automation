[
    {
        "id": "main_flow",
        "type": "tab",
        "label": "Smart Water Pump Controller",
        "disabled": false,
        "info": "Smart Water Pump Controller - Node-RED Implementation\n\nThis flow provides:\n- Real-time sensor monitoring (water level, temperature, humidity)\n- Pump control (AUTO/MANUAL modes)\n- Threshold configuration\n- System status monitoring\n- Safety alerts\n- Historical data charts\n\nMQTT Topics:\n- kel4/water_level - Water level percentage\n- kel4/suhu - Temperature in Celsius\n- kel4/kelembapan - Humidity percentage\n- kel4/pompa/control - Pump ON/OFF control\n- kel4/pompa/status - Pump status\n- kel4/mode/control - AUTO/MANUAL mode control\n- kel4/mode/status - Current mode status\n- kel4/threshold/set - Set thresholds (format: \"low,high\")\n- kel4/threshold/status - Current threshold values\n- kel4/system/status - Complete system status (JSON)"
    },
    {
        "id": "mqtt_in_water_level",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "Water Level",
        "topic": "kel4/water_level",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 410,
        "y": 260,
        "wires": [
            [
                "ui_gauge_water_level",
                "store_water_level",
                "ui_chart_water_level"
            ]
        ]
    },
    {
        "id": "mqtt_in_temperature",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "Temperature",
        "topic": "kel4/suhu",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "ui_gauge_temperature",
                "store_temperature"
            ]
        ]
    },
    {
        "id": "mqtt_in_humidity",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "Humidity",
        "topic": "kel4/kelembapan",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "inputs": 0,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "ui_gauge_humidity",
                "store_humidity"
            ]
        ]
    },
    {
        "id": "mqtt_in_pump_status",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "Pump Status",
        "topic": "kel4/pompa/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 410,
        "y": 460,
        "wires": [
            [
                "store_pump_status",
                "bc884d40e6589bcc"
            ]
        ]
    },
    {
        "id": "mqtt_in_system_status",
        "type": "mqtt in",
        "z": "main_flow",
        "name": "System Status",
        "topic": "kel4/system/status",
        "qos": "2",
        "datatype": "json",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "ui_template_system_status",
                "store_system_status"
            ]
        ]
    },
    {
        "id": "store_water_level",
        "type": "function",
        "z": "main_flow",
        "name": "Store Water Level",
        "func": "global.set('water_level', parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "store_temperature",
        "type": "function",
        "z": "main_flow",
        "name": "Store Temperature",
        "func": "global.set('temperature', parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "store_humidity",
        "type": "function",
        "z": "main_flow",
        "name": "Store Humidity",
        "func": "global.set('humidity', parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "store_pump_status",
        "type": "function",
        "z": "main_flow",
        "name": "Store Pump Status",
        "func": "global.set('pump_status', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 500,
        "wires": [
            [
                "bc884d40e6589bcc"
            ]
        ]
    },
    {
        "id": "store_system_status",
        "type": "function",
        "z": "main_flow",
        "name": "Store System Status",
        "func": "global.set('system_status', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "inject_init",
        "type": "inject",
        "z": "main_flow",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "init_global_vars"
            ]
        ]
    },
    {
        "id": "init_global_vars",
        "type": "function",
        "z": "main_flow",
        "name": "Initialize Global Variables",
        "func": "// Inisialisasi variabel global untuk menyimpan status sistem\nglobal.set('current_mode', 'auto');\nglobal.set('pump_status', 'off');\nglobal.set('water_level', 0);\nglobal.set('temperature', 0);\nglobal.set('humidity', 0);\nglobal.set('threshold_low', 25);\nglobal.set('threshold_high', 75);\nglobal.set('sensor_error', false);\nglobal.set('pump_overtime', false);\nglobal.set('rest_period', false);\n\nnode.log(\"Global variables initialized\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "alert_sensor_error",
        "type": "function",
        "z": "main_flow",
        "name": "Alert Sensor Error",
        "func": "var systemStatus = msg.payload;\n\nif (systemStatus.sensor_error === \"true\") {\n    msg.payload = \"‚ö†Ô∏è SENSOR ERROR: Water level sensor malfunction!\";\n    msg.topic = \"alert\";\n    return msg;\n}\n\nif (systemStatus.pump_overtime === \"true\") {\n    msg.payload = \"üö® SAFETY ALERT: Pump stopped - Maximum runtime exceeded!\";\n    msg.topic = \"alert\";\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 560,
        "wires": [
            [
                "ui_notification"
            ]
        ]
    },
    {
        "id": "ui_gauge_water_level",
        "type": "ui_gauge",
        "z": "main_flow",
        "name": "Water Level",
        "group": "ui_group_sensors",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Water Level",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#62a0ea"
        ],
        "seg1": "25",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 240,
        "wires": []
    },
    {
        "id": "ui_gauge_temperature",
        "type": "ui_gauge",
        "z": "main_flow",
        "name": "Temperature",
        "group": "ui_group_sensors",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "¬∞C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#62a0ea",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "35",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "ui_gauge_humidity",
        "type": "ui_gauge",
        "z": "main_flow",
        "name": "Humidity",
        "group": "ui_group_sensors",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#62a0ea"
        ],
        "seg1": "30",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "ui_notification",
        "type": "ui_toast",
        "z": "main_flow",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "System Notifications",
        "x": 1200,
        "y": 560,
        "wires": []
    },
    {
        "id": "ui_template_system_status",
        "type": "ui_template",
        "z": "main_flow",
        "group": "ui_group_status",
        "name": "System Status Display",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div style=\"padding: 10px;\">\n  <h3>System Status</h3>\n  <table style=\"height;auto\"; \"width:50%; border-collapse: collapse;\">\n    <tr><td><strong>Mode:</strong></td><td>{{msg.payload.mode || 'Unknown'}}</td></tr>\n    <tr><td><strong>Pump:</strong></td><td><span style=\"color: {{msg.payload.pump === 'on' ? 'green' : 'red'}}\">{{msg.payload.pump || 'Unknown'}}</span></td></tr>\n    <tr><td><strong>Water Level:</strong></td><td>{{msg.payload.water_level || 'N/A'}}%</td></tr>\n    <tr><td><strong>Temperature:</strong></td><td>{{msg.payload.temperature || 'N/A'}}¬∞C</td></tr>\n    <tr><td><strong>Humidity:</strong></td><td>{{msg.payload.humidity || 'N/A'}}%</td></tr>\n    <tr><td><strong>Threshold Low:</strong></td><td>{{msg.payload.threshold_low || 'N/A'}}%</td></tr>\n    <tr><td><strong>Threshold High:</strong></td><td>{{msg.payload.threshold_high || 'N/A'}}%</td></tr>\n    <tr><td><strong>Sensor Error:</strong></td><td><span style=\"color: {{msg.payload.sensor_error === 'true' ? 'red' : 'green'}}\">{{msg.payload.sensor_error === 'true' ? 'YES' : 'NO'}}</span></td></tr>\n    <tr><td><strong>Pump Overtime:</strong></td><td><span style=\"color: {{msg.payload.pump_overtime === 'true' ? 'red' : 'green'}}\">{{msg.payload.pump_overtime === 'true' ? 'YES' : 'NO'}}</span></td></tr>\n    <tr><td><strong>Rest Period:</strong></td><td><span style=\"color: {{msg.payload.rest_period === 'true' ? 'orange' : 'green'}}\">{{msg.payload.rest_period === 'true' ? 'YES' : 'NO'}}</span></td></tr>\n  </table>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ui_chart_water_level",
        "type": "ui_chart",
        "z": "main_flow",
        "name": "Water Level History",
        "group": "6bb96ed8cc306096",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Water Level Trend",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bc884d40e6589bcc",
        "type": "ui_text",
        "z": "main_flow",
        "group": "ui_group_control",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Pump Status",
        "label": "Pump Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 460,
        "wires": []
    },
    {
        "id": "5ac4ade6b042ba84",
        "type": "ui_switch",
        "z": "main_flow",
        "name": "Mode Switch",
        "label": "Mode (AUTO/MANUAL)",
        "tooltip": "Toggle between AUTO and MANUAL mode",
        "group": "ui_group_control",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "auto",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "manual",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 410,
        "y": 700,
        "wires": [
            [
                "a57df2e265cac085"
            ]
        ]
    },
    {
        "id": "a57df2e265cac085",
        "type": "mqtt out",
        "z": "main_flow",
        "name": "Publish Mode",
        "topic": "kel4/mode/control",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 610,
        "y": 700,
        "wires": []
    },
    {
        "id": "c23a9847dec7f499",
        "type": "ui_switch",
        "z": "main_flow",
        "name": "Manual Pump Control",
        "label": "Pump ON/OFF (Manual Mode)",
        "tooltip": "Control pump when in manual mode",
        "group": "ui_group_control",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 760,
        "wires": [
            [
                "f95e73914c2d5c75"
            ]
        ]
    },
    {
        "id": "f95e73914c2d5c75",
        "type": "function",
        "z": "main_flow",
        "name": "Manual Mode Gate",
        "func": "// Only allow pump control if in manual mode\nif (context.get('currentMode') === 'manual') {\n    return msg;\n} else {\n    node.warn('Pump control blocked - System in AUTO mode');\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 760,
        "wires": [
            [
                "8aeda2d5dd4138eb"
            ]
        ]
    },
    {
        "id": "8aeda2d5dd4138eb",
        "type": "mqtt out",
        "z": "main_flow",
        "name": "Publish Pump Control",
        "topic": "kel4/pompa/control",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "9ca47e9816e5d135",
        "type": "ui_form",
        "z": "main_flow",
        "name": "Threshold Settings",
        "label": "Water Level Thresholds",
        "group": "ui_group_control",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Low Threshold (%)",
                "value": "low",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "High Threshold (%)",
                "value": "high",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "low": "",
            "high": ""
        },
        "payload": "",
        "submit": "Update",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 440,
        "y": 820,
        "wires": [
            [
                "f06c9ee1d7a4571e"
            ]
        ]
    },
    {
        "id": "f06c9ee1d7a4571e",
        "type": "function",
        "z": "main_flow",
        "name": "Format Threshold",
        "func": "// Format threshold message as \"low,high\"\nvar low = msg.payload.low;\nvar high = msg.payload.high;\n\nif (low > 0 && high > low && high <= 100) {\n    msg.payload = low + \",\" + high;\n    return msg;\n} else {\n    node.error(\"Invalid threshold values\");\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "80a1dd961ab84567"
            ]
        ]
    },
    {
        "id": "80a1dd961ab84567",
        "type": "mqtt out",
        "z": "main_flow",
        "name": "Publish Threshold",
        "topic": "kel4/threshold/set",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 870,
        "y": 820,
        "wires": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "MQTT Broker Kelompok 4",
        "broker": "10.20.11.11",
        "port": "1883",
        "clientid": "NodeRED_WaterPump",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ui_group_sensors",
        "type": "ui_group",
        "name": "Sensor Readings",
        "tab": "ui_tab_main",
        "order": 1,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": "horizontal-container"
    },
    {
        "id": "ui_group_status",
        "type": "ui_group",
        "name": "System Status",
        "tab": "ui_tab_main",
        "order": 3,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6bb96ed8cc306096",
        "type": "ui_group",
        "name": "History Trend",
        "tab": "ui_tab_main",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ui_group_control",
        "type": "ui_group",
        "name": "Control Panel",
        "tab": "ui_tab_main",
        "order": 5,
        "disp": true,
        "width": 5,
        "collapse": false
    },
    {
        "id": "ui_tab_main",
        "type": "ui_tab",
        "name": "Smart Water Pump",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]